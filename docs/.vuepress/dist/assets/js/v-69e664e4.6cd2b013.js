"use strict";(self.webpackChunksmarthotel_flutter=self.webpackChunksmarthotel_flutter||[]).push([[952],{3832:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-69e664e4",path:"/auth-page/login.html",title:"Login Page",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"auth-page/login.md",git:{updatedTime:1638350784e3,contributors:[{name:"Restu Indrawan",email:"57904667+restuindrawan@users.noreply.github.com",commits:3}]}}},8228:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="login-page" tabindex="-1"><a class="header-anchor" href="#login-page" aria-hidden="true">#</a> Login Page</h1><p>Login page pada aplikasi smotel kami mengimplementasikan Firebase Authentication, yang dimana memudahkan dalam membuat prosesnya tersendiri. Form disini sudah mengimplementasikan validasi yang dimana memeriksa apakah email dan passoword valid? dan juga memeriksa apabila akun ada atau tidak.</p><p>Berikut adalah kode implementasi login dengan firebase</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">signIn</span><span class="token punctuation">(</span><span class="token class-name">String</span> email<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token class-name">UserCredential</span> userCredential <span class="token operator">=</span> <span class="token keyword">await</span> auth<span class="token punctuation">.</span><span class="token function">signInWithEmailAndPassword</span><span class="token punctuation">(</span>\n        email<span class="token punctuation">:</span> email<span class="token punctuation">,</span>\n        password<span class="token punctuation">:</span> password<span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token function">offAllNamed</span><span class="token punctuation">(</span><span class="token class-name">Routes</span><span class="token punctuation">.</span>NAVBAR<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token function">snackbar</span><span class="token punctuation">(</span>\n        <span class="token string">&quot;Succesfully Signed in&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;Signed in succesfully as &quot;</span> <span class="token operator">+</span>\n            userCredential<span class="token punctuation">.</span>user<span class="token operator">!</span><span class="token punctuation">.</span>displayName<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        snackPosition<span class="token punctuation">:</span> <span class="token class-name">SnackPosition</span><span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span>\n        colorText<span class="token punctuation">:</span> color_white<span class="token punctuation">,</span>\n        backgroundColor<span class="token punctuation">:</span> color_black<span class="token punctuation">,</span>\n        margin<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">on</span> <span class="token class-name">FirebaseAuthException</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token string">&#39;user-not-found&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// print(&#39;No user found for that email.&#39;);</span>\n        <span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token function">snackbar</span><span class="token punctuation">(</span>\n          <span class="token string">&quot;User not found&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;No user found for that email&quot;</span><span class="token punctuation">,</span>\n          snackPosition<span class="token punctuation">:</span> <span class="token class-name">SnackPosition</span><span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span>\n          colorText<span class="token punctuation">:</span> color_white<span class="token punctuation">,</span>\n          backgroundColor<span class="token punctuation">:</span> color_red<span class="token punctuation">,</span>\n          margin<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token string">&#39;wrong-password&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// print(&#39;Invalid password.&#39;);</span>\n        <span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token function">snackbar</span><span class="token punctuation">(</span>\n          <span class="token string">&quot;Wrong Password&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;Wrong password provided for that user&quot;</span><span class="token punctuation">,</span>\n          snackPosition<span class="token punctuation">:</span> <span class="token class-name">SnackPosition</span><span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span>\n          colorText<span class="token punctuation">:</span> color_white<span class="token punctuation">,</span>\n          backgroundColor<span class="token punctuation">:</span> color_red<span class="token punctuation">,</span>\n          margin<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// Get.defaultDialog();</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p>Berikut adalah kode implementasi login google dengan firebase</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">signInWithGoogle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> <span class="token class-name">GoogleSignInAccount</span><span class="token operator">?</span> googleUser <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">GoogleSignIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">signIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Obtain the auth details from the request</span>\n    <span class="token keyword">final</span> <span class="token class-name">GoogleSignInAuthentication</span><span class="token operator">?</span> googleAuth <span class="token operator">=</span>\n        <span class="token keyword">await</span> googleUser<span class="token operator">?</span><span class="token punctuation">.</span>authentication<span class="token punctuation">;</span>\n\n    <span class="token comment">// Create a new credential</span>\n    <span class="token keyword">final</span> credential <span class="token operator">=</span> <span class="token class-name">GoogleAuthProvider</span><span class="token punctuation">.</span><span class="token function">credential</span><span class="token punctuation">(</span>\n      accessToken<span class="token punctuation">:</span> googleAuth<span class="token operator">?</span><span class="token punctuation">.</span>accessToken<span class="token punctuation">,</span>\n      idToken<span class="token punctuation">:</span> googleAuth<span class="token operator">?</span><span class="token punctuation">.</span>idToken<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Once signed in, return the UserCredential</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">await</span> auth<span class="token punctuation">.</span><span class="token function">signInWithCredential</span><span class="token punctuation">(</span>credential<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token function">offAllNamed</span><span class="token punctuation">(</span><span class="token class-name">Routes</span><span class="token punctuation">.</span>NAVBAR<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token function">snackbar</span><span class="token punctuation">(</span>\n        <span class="token string">&quot;Succesfully Signed in&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;Signed in succesfully as &quot;</span> <span class="token operator">+</span> googleUser<span class="token operator">!</span><span class="token punctuation">.</span>displayName<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        snackPosition<span class="token punctuation">:</span> <span class="token class-name">SnackPosition</span><span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span>\n        colorText<span class="token punctuation">:</span> color_white<span class="token punctuation">,</span>\n        backgroundColor<span class="token punctuation">:</span> color_black<span class="token punctuation">,</span>\n        margin<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">on</span> <span class="token class-name">FirebaseAuthException</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token string">&#39;user-not-found&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;No user found for that email.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token string">&#39;wrong-password&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;Wrong password provided for that user.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>Berikut adalah kode validasi yang kami pakai</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">String</span><span class="token operator">?</span> <span class="token function">validateEmail</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">GetUtils</span><span class="token punctuation">.</span><span class="token function">isEmail</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&quot;Provide valid Email&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">String</span><span class="token operator">?</span> <span class="token function">validatePassowrd</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>isEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&quot;Password required&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">checkForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> isValid <span class="token operator">=</span> loginFormKey<span class="token punctuation">.</span>currentState<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    authController<span class="token punctuation">.</span><span class="token function">signIn</span><span class="token punctuation">(</span>emailController<span class="token punctuation">.</span>text<span class="token punctuation">,</span> passController<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  loginFormKey<span class="token punctuation">.</span>currentState<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>Berikut adalah tampilannya:</p><p><img src="https://user-images.githubusercontent.com/57904667/144207768-8ed50de7-652e-4afc-a37d-ecc73887f95f.png" alt="image"></p>',10),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);